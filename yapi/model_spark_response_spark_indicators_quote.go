/*
 * Yahoo Finance
 *
 * Yahoo Finance API specification
 *
 * API version: 1.0.8
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yapi

import (
	"encoding/json"
)

// SparkResponseSparkIndicatorsQuote struct for SparkResponseSparkIndicatorsQuote
type SparkResponseSparkIndicatorsQuote struct {
	Close *[]float32 `json:"close,omitempty"`
}

// NewSparkResponseSparkIndicatorsQuote instantiates a new SparkResponseSparkIndicatorsQuote object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSparkResponseSparkIndicatorsQuote() *SparkResponseSparkIndicatorsQuote {
	this := SparkResponseSparkIndicatorsQuote{}
	return &this
}

// NewSparkResponseSparkIndicatorsQuoteWithDefaults instantiates a new SparkResponseSparkIndicatorsQuote object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSparkResponseSparkIndicatorsQuoteWithDefaults() *SparkResponseSparkIndicatorsQuote {
	this := SparkResponseSparkIndicatorsQuote{}
	return &this
}

// GetClose returns the Close field value if set, zero value otherwise.
func (o *SparkResponseSparkIndicatorsQuote) GetClose() []float32 {
	if o == nil || o.Close == nil {
		var ret []float32
		return ret
	}
	return *o.Close
}

// GetCloseOk returns a tuple with the Close field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SparkResponseSparkIndicatorsQuote) GetCloseOk() (*[]float32, bool) {
	if o == nil || o.Close == nil {
		return nil, false
	}
	return o.Close, true
}

// HasClose returns a boolean if a field has been set.
func (o *SparkResponseSparkIndicatorsQuote) HasClose() bool {
	if o != nil && o.Close != nil {
		return true
	}

	return false
}

// SetClose gets a reference to the given []float32 and assigns it to the Close field.
func (o *SparkResponseSparkIndicatorsQuote) SetClose(v []float32) {
	o.Close = &v
}

func (o SparkResponseSparkIndicatorsQuote) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Close != nil {
		toSerialize["close"] = o.Close
	}
	return json.Marshal(toSerialize)
}

type NullableSparkResponseSparkIndicatorsQuote struct {
	value *SparkResponseSparkIndicatorsQuote
	isSet bool
}

func (v NullableSparkResponseSparkIndicatorsQuote) Get() *SparkResponseSparkIndicatorsQuote {
	return v.value
}

func (v *NullableSparkResponseSparkIndicatorsQuote) Set(val *SparkResponseSparkIndicatorsQuote) {
	v.value = val
	v.isSet = true
}

func (v NullableSparkResponseSparkIndicatorsQuote) IsSet() bool {
	return v.isSet
}

func (v *NullableSparkResponseSparkIndicatorsQuote) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSparkResponseSparkIndicatorsQuote(val *SparkResponseSparkIndicatorsQuote) *NullableSparkResponseSparkIndicatorsQuote {
	return &NullableSparkResponseSparkIndicatorsQuote{value: val, isSet: true}
}

func (v NullableSparkResponseSparkIndicatorsQuote) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSparkResponseSparkIndicatorsQuote) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


