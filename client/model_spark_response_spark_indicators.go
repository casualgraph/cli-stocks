/*
 * Yahoo Finance
 *
 * Yahoo Finance API specification
 *
 * API version: 1.0.8
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SparkResponseSparkIndicators struct for SparkResponseSparkIndicators
type SparkResponseSparkIndicators struct {
	Quote *[]SparkResponseSparkIndicatorsQuote `json:"quote,omitempty"`
}

// NewSparkResponseSparkIndicators instantiates a new SparkResponseSparkIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSparkResponseSparkIndicators() *SparkResponseSparkIndicators {
	this := SparkResponseSparkIndicators{}
	return &this
}

// NewSparkResponseSparkIndicatorsWithDefaults instantiates a new SparkResponseSparkIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSparkResponseSparkIndicatorsWithDefaults() *SparkResponseSparkIndicators {
	this := SparkResponseSparkIndicators{}
	return &this
}

// GetQuote returns the Quote field value if set, zero value otherwise.
func (o *SparkResponseSparkIndicators) GetQuote() []SparkResponseSparkIndicatorsQuote {
	if o == nil || o.Quote == nil {
		var ret []SparkResponseSparkIndicatorsQuote
		return ret
	}
	return *o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SparkResponseSparkIndicators) GetQuoteOk() (*[]SparkResponseSparkIndicatorsQuote, bool) {
	if o == nil || o.Quote == nil {
		return nil, false
	}
	return o.Quote, true
}

// HasQuote returns a boolean if a field has been set.
func (o *SparkResponseSparkIndicators) HasQuote() bool {
	if o != nil && o.Quote != nil {
		return true
	}

	return false
}

// SetQuote gets a reference to the given []SparkResponseSparkIndicatorsQuote and assigns it to the Quote field.
func (o *SparkResponseSparkIndicators) SetQuote(v []SparkResponseSparkIndicatorsQuote) {
	o.Quote = &v
}

func (o SparkResponseSparkIndicators) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Quote != nil {
		toSerialize["quote"] = o.Quote
	}
	return json.Marshal(toSerialize)
}

type NullableSparkResponseSparkIndicators struct {
	value *SparkResponseSparkIndicators
	isSet bool
}

func (v NullableSparkResponseSparkIndicators) Get() *SparkResponseSparkIndicators {
	return v.value
}

func (v *NullableSparkResponseSparkIndicators) Set(val *SparkResponseSparkIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableSparkResponseSparkIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableSparkResponseSparkIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSparkResponseSparkIndicators(val *SparkResponseSparkIndicators) *NullableSparkResponseSparkIndicators {
	return &NullableSparkResponseSparkIndicators{value: val, isSet: true}
}

func (v NullableSparkResponseSparkIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSparkResponseSparkIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


